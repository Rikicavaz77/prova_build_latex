name: Publish and Deploy
run-name: Publish and Deploy (PDFs) on PR Merge

# Definizione dei permessi
permissions:
  contents: write
  pages: write
  id-token: write

# Trigger: pull request sul ramo base
on:
  push:
    branches: 
      - main
    #types: [closed]

# Unità di lavoro all'interno del workflow
jobs:
  docker:
  
    # Controllo se la pull request è stata unita al ramo base
    #if: github.event.pull_request.merged == true
    
    # Esecuzione in ambiente Ubuntu con le ultime versioni di pacchetti e librerie
    runs-on: ubuntu-latest
    
    # Azioni atomiche eseguite in sequenza all'interno di un job
    steps:
    
    # Clonazione del repository sorgente all'interno dell'ambiente di esecuzione del job
    - name: Checkout Source Repository
      uses: actions/checkout@v4
      with:
          fetch-depth: 0

    # Salvataggio e ripristino della cache
    - name: Cache Docker
      uses: actions/cache@v4
      id: cache-docker
      with:
        path: ${{ github.workspace }}/tools/docker
        key: ${{ runner.os }}-docker-${{ hashFiles('**/tools/docker-compose.yml') }}-${{ hashFiles('**/tools/docker/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-docker

    # Creazione e avvio del contenitore Docker
    - name: Start Docker Container
      run: |
       cd ${{ github.workspace }}/tools
       docker compose up -d 

    # Compilazione dei documenti tramite shell interattiva all'interno del contenitore Docker
    - name: Compile Documents
      run: |
        cd ${{ github.workspace }}/tools
        docker exec argo-docs-latexpdfbuilder-1 bash -c 'cd /data && chmod +x *.sh && ./compilescript.sh -d RTB'

    # Pubblicazione dell'artefatto generato durante il processo di build
    - name: Publish Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Docs
        path: build-output

    - name: ciao
      run: |
        ls
        cp -r build-output/RTB .
        ls

    # Clonazione del repository di destinazione in una directory temporanea
    - name: Checkout Destination Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.FINE_GRAINED_TOKEN }}
        repository: Rikicavaz77/MTSS-Assignment-2
        fetch-depth: 0
        path: ./temp-checkout

    # Estrazione dei file
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: Docs
        path: ./temp-checkout
        token: ${{ secrets.FINE_GRAINED_TOKEN }}

    - name: ciao
      run: |
        ls

    - name: Upload Documents
      continue-on-error: true
      run: |
       if [ -d "RTB" ]; then
         if [ -d "RTB/Verbali/Esterni" ]; then
           rm -rf RTB/Verbali/Esterni
         fi
         cp -r RTB/* temp-checkout/RTB/
       fi
       if [ -d "PB" ]; then
         if [ -d "PB/Verbali/Esterni" ]; then
           rm -rf PB/Verbali/Esterni
         fi
         cp -r PB/* temp-checkout/PB/
       fi
    
    - name: Push Documents
      continue-on-error: true
      run: |
        cd ./temp-checkout
        ls
        cd RTB
        ls
        cd Verbali
        ls
            
    - name: Checkout Back Source Repository
      continue-on-error: true
      run: ls
         
    - name: Stop Docker Container
      run: |
        cd ${{ github.workspace }}/tools
        docker compose down
